---
# ---------------------------------------------- reset rally
- name: Resetting the environment
  file:
    path: /root/rally_home
    state: absent
  when: bench.reset

# ---------------------------------------------- Setup rally
- name: Install rally result directory
  file: path=/root/rally_home state=directory owner=65500

- name: Test whether the rally database has been initialized
  stat: path=/root/rally_home/rally.db
  register: sqlite

- name: Initialize database
  when: not sqlite.stat.exists
  command: >
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }} 
           db create

# NOTE(msimonin): without the pause
# the file seems not to be synced in the next task.
# Relaunching the play a second time is also a possible wokaround.
- name: Waiting a few seconds
  pause: seconds=5

- name: Test whether the rally deployment has been created
  command: > 
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }} 
           deployment list
  register: deployment

- name: Deploy discovery context
  when: "'discovery' not in deployment.stdout"
  docker_container:
    name: "{{ 'deployment' | to_uuid }}"
    image: "{{ rally_container_image }}"
    state: started
    volumes:
      - /root/rally_home:/home/rally/data
    env: "{{ os_env }}"
    command: deployment create --fromenv --name=discovery

# ----------------------------------- Setup & run rally test
- name: Copy rally scenarios
  copy: src={{ bench.scenario_location }} dest=/root/rally_home/ owner=655500

- name: Create plugin directory
  when: bench.plugin_location is defined
  file:
    path: /root/rally_home/.rally/plugins
    state: directory
    mode: 0755

- name: Copy rally plugins
  when: bench.plugin_location is defined
  copy: src={{ bench.plugin_location }} dest=/root/rally_home/.rally/plugins owner=655500

- name: Create rally-args.json with arguments for the scenario
  copy:
    content: "{{ bench.args }}"
    dest: /root/rally_home/rally-args.json

- name: Run scenario {{ bench.scenario_location | basename }} 
  command: >
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }}
           task start /home/rally/data/{{ bench.scenario_location | basename }}
           --task-args-file /home/rally/data/rally-args.json
           --deployment discovery
  ignore_errors: yes

# -------------------------------- Download results (if any)
- name: Find report identifier
  shell: > 
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }}\
           task list --uuids-only\
           --deployment discovery\
          | tail -n 1
  register: task_uuid
  ignore_errors: yes

- name: Generating rally reports (html) for {{ task_uuid.stdout }}
  when: task_uuid.stdout != ""
  command: >
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }} 
           task report --uuid {{ task_uuid.stdout }} 
           --html-static --out 
           /home/rally/data/report-{{ bench.scenario_location | basename }}-{{ task_uuid.stdout }}.html
  ignore_errors: yes

- name: Generating rally reports (json) for {{ task_uuid.stdout }}
  when: task_uuid.stdout != ""
  command: > 
    docker run -v /root/rally_home:/home/rally/data {{ rally_container_image }} 
           task report --uuid {{ task_uuid.stdout }} 
           --json --out 
           /home/rally/data/report-{{ bench.scenario_location | basename }}-{{ task_uuid.stdout }}.json
  ignore_errors: yes
