---
# NOTE(msimonin): We initialize openstack (flavor, networks, images ...) from
# from the kolla_toolbox container. This way we are "sure" that the openstack
# client corresponds to the currently deployed openstack.
- name: Create local working directory (/srv/init_os)
  file:
    path: /srv/init_os
    state: directory

- name: Generate init script
  template:
    src: init.sh.j2
    dest: /srv/init_os/init.sh

- name: Make the init script executable
  file:
    path: /srv/init_os/init.sh
    mode: 0755

- name: Get the reference on the kolla-toolbox image
  shell: "{% raw %} docker images --format '{{ .Repository }}:{{ .Tag }}' | grep kolla-toolbox {% endraw %}"
  register: kolla_toolbox_image

- name: Download reference images
  vars:
    images:
      debian:
        name: debian-9
        url: https://cdimage.debian.org/cdimage/openstack/current-9/debian-9-openstack-amd64.qcow2
      cirros:
        name: cirros.uec
        url: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
  shell: "ls -l /srv/init_os/{{ item.value.name }}.qcow2 || curl -L -o /srv/init_os/{{ item.value.name }}.qcow2 {{ item.value.url }}"
  loop: "{{ lookup('dict', images) }}"

- name: Launch init in kolla_toolbox container
  docker_container:
    name: kolla_toolbox
    env: "{{ os_env }}"
    command: "/srv/init_os/init.sh"
    image: "{{ kolla_toolbox_image.stdout }}"
    volumes:
      - /srv/init_os:/srv/init_os
  register: docker_output

- name: Wait for the end of the init...
  command: "docker ps -q --filter id={{ docker_output.ansible_facts.docker_container.Id }}"
  register: finished
  until: finished.stdout == ""
  delay: 5
  retries:  100

- name: Init report
  command: "docker logs {{ docker_output.ansible_facts.docker_container.Id }}"
  register: init_output

- name: Init report
  debug: var=init_output
